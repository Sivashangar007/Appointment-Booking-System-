{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CHIYAAN-007\\\\appointment-booking\\\\frontend\\\\src\\\\components\\\\MyAppointments.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport Modal from \"react-modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyAppointments = () => {\n  _s();\n  const [date, setDate] = useState(new Date());\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedAppointment, setSelectedAppointment] = useState(null);\n\n  // Example booked appointments\n  const appointments = {\n    \"2024-10-10\": {\n      time: \"10:00 AM\",\n      doctor: \"Dr. Smith\"\n    },\n    \"2024-10-15\": {\n      time: \"02:00 PM\",\n      doctor: \"Dr. Johnson\"\n    }\n  };\n\n  // Highlight booked dates\n  const tileClassName = ({\n    date\n  }) => {\n    const formattedDate = date.toISOString().split(\"T\")[0];\n    return appointments[formattedDate] ? \"booked\" : null;\n  };\n  const onDateClick = value => {\n    const formattedDate = value.toISOString().split(\"T\")[0];\n    if (appointments[formattedDate]) {\n      setSelectedAppointment(appointments[formattedDate]);\n      setIsModalOpen(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Appointments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      onChange: setDate,\n      value: date,\n      tileClassName: tileClassName,\n      onClickDay: onDateClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: () => setIsModalOpen(false),\n      children: selectedAppointment && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Appointment Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Doctor: \", selectedAppointment.doctor]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Time: \", selectedAppointment.time]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsModalOpen(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          .booked {\n            background-color: #ff6666 !important;\n            color: white;\n            border-radius: 50%;\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(MyAppointments, \"zNvDP82PbsEMf3+Wm19IQLQ+FUU=\");\n_c = MyAppointments;\nexport default MyAppointments;\nvar _c;\n$RefreshReg$(_c, \"MyAppointments\");","map":{"version":3,"names":["React","useState","Calendar","Modal","jsxDEV","_jsxDEV","MyAppointments","_s","date","setDate","Date","isModalOpen","setIsModalOpen","selectedAppointment","setSelectedAppointment","appointments","time","doctor","tileClassName","formattedDate","toISOString","split","onDateClick","value","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onClickDay","isOpen","onRequestClose","onClick","_c","$RefreshReg$"],"sources":["C:/Users/CHIYAAN-007/appointment-booking/frontend/src/components/MyAppointments.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport Modal from \"react-modal\";\r\n\r\nconst MyAppointments = () => {\r\n  const [date, setDate] = useState(new Date());\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [selectedAppointment, setSelectedAppointment] = useState(null);\r\n\r\n  // Example booked appointments\r\n  const appointments = {\r\n    \"2024-10-10\": { time: \"10:00 AM\", doctor: \"Dr. Smith\" },\r\n    \"2024-10-15\": { time: \"02:00 PM\", doctor: \"Dr. Johnson\" },\r\n  };\r\n\r\n  // Highlight booked dates\r\n  const tileClassName = ({ date }) => {\r\n    const formattedDate = date.toISOString().split(\"T\")[0];\r\n    return appointments[formattedDate] ? \"booked\" : null;\r\n  };\r\n\r\n  const onDateClick = (value) => {\r\n    const formattedDate = value.toISOString().split(\"T\")[0];\r\n    if (appointments[formattedDate]) {\r\n      setSelectedAppointment(appointments[formattedDate]);\r\n      setIsModalOpen(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>My Appointments</h2>\r\n      <Calendar onChange={setDate} value={date} tileClassName={tileClassName} onClickDay={onDateClick} />\r\n\r\n      <Modal isOpen={isModalOpen} onRequestClose={() => setIsModalOpen(false)}>\r\n        {selectedAppointment && (\r\n          <div>\r\n            <h3>Appointment Details</h3>\r\n            <p>Doctor: {selectedAppointment.doctor}</p>\r\n            <p>Time: {selectedAppointment.time}</p>\r\n            <button onClick={() => setIsModalOpen(false)}>Close</button>\r\n          </div>\r\n        )}\r\n      </Modal>\r\n\r\n      <style>\r\n        {`\r\n          .booked {\r\n            background-color: #ff6666 !important;\r\n            color: white;\r\n            border-radius: 50%;\r\n          }\r\n        `}\r\n      </style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyAppointments;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}