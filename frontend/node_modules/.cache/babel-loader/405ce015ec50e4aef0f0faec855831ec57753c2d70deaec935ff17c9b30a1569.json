{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CHIYAAN-007\\\\appointment-booking\\\\frontend\\\\src\\\\components\\\\MyAppointments.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport 'react-calendar/dist/Calendar.css';\nimport Modal from 'react-modal';\nimport './MyAppointments.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nconst MyAppointments = () => {\n  _s();\n  const [appointments, setAppointments] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  useEffect(() => {\n    // Fetch appointments from backend API\n    fetch('/api/appointments').then(res => res.json()).then(data => setAppointments(data));\n  }, []);\n  const handleDateClick = date => {\n    const formattedDate = date.toISOString().split('T')[0];\n    const appointment = appointments.find(appt => appt.date === formattedDate);\n    if (appointment) {\n      setSelectedDate(appointment);\n      setModalIsOpen(true);\n    }\n  };\n  const handleCancel = id => {\n    // Call API to cancel appointment\n    fetch(`/api/appointments/${id}`, {\n      method: 'DELETE'\n    }).then(() => {\n      setAppointments(appointments.filter(appt => appt.id !== id));\n      setModalIsOpen(false);\n    });\n  };\n  const tileClassName = ({\n    date,\n    view\n  }) => {\n    if (view === 'month') {\n      const formattedDate = date.toISOString().split('T')[0];\n      return appointments.some(appt => appt.date === formattedDate) ? 'booked' : '';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"appointments-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Appointments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      onClickDay: handleDateClick,\n      tileClassName: tileClassName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: () => setModalIsOpen(false),\n      className: \"modal-content\",\n      overlayClassName: \"modal-overlay\",\n      children: selectedDate && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Appointment Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 16\n          }, this), \" \", selectedDate.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 16\n          }, this), \" \", selectedDate.time]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Doctor:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 16\n          }, this), \" \", selectedDate.doctor]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleCancel(selectedDate.id),\n          className: \"cancel-btn\",\n          children: \"Cancel Appointment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setModalIsOpen(false),\n          className: \"close-btn\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(MyAppointments, \"3SQ5WKObu137mGD2iLxpaXgjSMo=\");\n_c = MyAppointments;\nexport default MyAppointments;\nvar _c;\n$RefreshReg$(_c, \"MyAppointments\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","Modal","jsxDEV","_jsxDEV","setAppElement","MyAppointments","_s","appointments","setAppointments","selectedDate","setSelectedDate","modalIsOpen","setModalIsOpen","fetch","then","res","json","data","handleDateClick","date","formattedDate","toISOString","split","appointment","find","appt","handleCancel","id","method","filter","tileClassName","view","some","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClickDay","isOpen","onRequestClose","overlayClassName","time","doctor","onClick","_c","$RefreshReg$"],"sources":["C:/Users/CHIYAAN-007/appointment-booking/frontend/src/components/MyAppointments.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';import 'react-calendar/dist/Calendar.css';\r\n\r\nimport Modal from 'react-modal';\r\nimport './MyAppointments.css';\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst MyAppointments = () => {\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Fetch appointments from backend API\r\n    fetch('/api/appointments')\r\n      .then((res) => res.json())\r\n      .then((data) => setAppointments(data));\r\n  }, []);\r\n\r\n  const handleDateClick = (date) => {\r\n    const formattedDate = date.toISOString().split('T')[0];\r\n    const appointment = appointments.find((appt) => appt.date === formattedDate);\r\n    if (appointment) {\r\n      setSelectedDate(appointment);\r\n      setModalIsOpen(true);\r\n    }\r\n  };\r\n\r\n  const handleCancel = (id) => {\r\n    // Call API to cancel appointment\r\n    fetch(`/api/appointments/${id}`, { method: 'DELETE' })\r\n      .then(() => {\r\n        setAppointments(appointments.filter((appt) => appt.id !== id));\r\n        setModalIsOpen(false);\r\n      });\r\n  };\r\n\r\n  const tileClassName = ({ date, view }) => {\r\n    if (view === 'month') {\r\n      const formattedDate = date.toISOString().split('T')[0];\r\n      return appointments.some((appt) => appt.date === formattedDate) ? 'booked' : '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"appointments-container\">\r\n      <h2>My Appointments</h2>\r\n      <Calendar \r\n        onClickDay={handleDateClick} \r\n        tileClassName={tileClassName} \r\n      />\r\n\r\n      <Modal \r\n        isOpen={modalIsOpen} \r\n        onRequestClose={() => setModalIsOpen(false)}\r\n        className=\"modal-content\"\r\n        overlayClassName=\"modal-overlay\"\r\n      >\r\n        {selectedDate && (\r\n          <div>\r\n            <h3>Appointment Details</h3>\r\n            <p><strong>Date:</strong> {selectedDate.date}</p>\r\n            <p><strong>Time:</strong> {selectedDate.time}</p>\r\n            <p><strong>Doctor:</strong> {selectedDate.doctor}</p>\r\n            <button onClick={() => handleCancel(selectedDate.id)} className=\"cancel-btn\">Cancel Appointment</button>\r\n            <button onClick={() => setModalIsOpen(false)} className=\"close-btn\">Close</button>\r\n          </div>\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyAppointments;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}